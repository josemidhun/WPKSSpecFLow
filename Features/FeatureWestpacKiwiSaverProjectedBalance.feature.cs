// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.5.0.0
//      SpecFlow Generator Version:3.5.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace WPKSSpecFLow.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.5.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("FeatureWestpacKiwiSaverProjectedBalance", Description="In order to plan their investments better for the users.\r\n\tAs a Product Owner\r\n\tI" +
        " want that the KiwiSaver Retirement Calculator users are able to calculate what " +
        "their KiwiSaver projected balance would be at retirement", SourceFile="Features\\FeatureWestpacKiwiSaverProjectedBalance.feature", SourceLine=0)]
    public partial class FeatureWestpacKiwiSaverProjectedBalanceFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "FeatureWestpacKiwiSaverProjectedBalance.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "FeatureWestpacKiwiSaverProjectedBalance", "In order to plan their investments better for the users.\r\n\tAs a Product Owner\r\n\tI" +
                    " want that the KiwiSaver Retirement Calculator users are able to calculate what " +
                    "their KiwiSaver projected balance would be at retirement", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void EstimatedKiwiSaverBalance(string currentAge, string employmentStatus, string annualIncome, string kiwiSaverMemberContribution, string currentKiwiSaverBalance, string voluntaryContributions, string voluntaryContributionsFrequency, string riskProfile, string savingsGoal, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "mytag"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("CurrentAge", currentAge);
            argumentsOfScenario.Add("EmploymentStatus", employmentStatus);
            argumentsOfScenario.Add("AnnualIncome", annualIncome);
            argumentsOfScenario.Add("KiwiSaverMemberContribution", kiwiSaverMemberContribution);
            argumentsOfScenario.Add("CurrentKiwiSaverBalance", currentKiwiSaverBalance);
            argumentsOfScenario.Add("VoluntaryContributions", voluntaryContributions);
            argumentsOfScenario.Add("VoluntaryContributionsFrequency", voluntaryContributionsFrequency);
            argumentsOfScenario.Add("RiskProfile", riskProfile);
            argumentsOfScenario.Add("SavingsGoal", savingsGoal);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Estimated KiwiSaver Balance", null, tagsOfScenario, argumentsOfScenario);
#line 7
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 8
 testRunner.Given("the User Navigate to Westpac KiwiSaver Retirement Calculator Page Calculator Page" +
                        "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 9
 testRunner.And(string.Format("the User CurrentAge is {0}", currentAge), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 10
 testRunner.And(string.Format("the User Employment Status is {0}", employmentStatus), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 11
 testRunner.And(string.Format("the User Annual Income is {0}", annualIncome), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 12
 testRunner.And(string.Format("the User KiwiSaver Member Contribution is {0}", kiwiSaverMemberContribution), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 13
 testRunner.And(string.Format("the User Current Kiwi Saver Balance is {0}", currentKiwiSaverBalance), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 14
 testRunner.And(string.Format("the User Voluntary Contributions is {0}", voluntaryContributions), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 15
    testRunner.And(string.Format("the User Voluntary Contributions Frequency is {0}", voluntaryContributionsFrequency), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 16
 testRunner.And(string.Format("the User Risk Profile is {0}", riskProfile), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 17
 testRunner.And(string.Format("the User Savings Goal is {0}", savingsGoal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 18
 testRunner.When("the User KiwiSaver projected balance is calculated", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 19
 testRunner.Then("the User can see the estimated KiwiSaver Projected Balance", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Estimated KiwiSaver Balance, 30", new string[] {
                "mytag"}, SourceLine=22)]
        public virtual void EstimatedKiwiSaverBalance_30()
        {
#line 7
this.EstimatedKiwiSaverBalance("30", "Employed", "82000", "4%", "", "", "", "Defensive", "", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Estimated KiwiSaver Balance, 45", new string[] {
                "mytag"}, SourceLine=22)]
        public virtual void EstimatedKiwiSaverBalance_45()
        {
#line 7
this.EstimatedKiwiSaverBalance("45", "Self-employed", "", "", "$100000", "$90", "Fortnightly", "Conservative", "$290,000", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Estimated KiwiSaver Balance, 55", new string[] {
                "mytag"}, SourceLine=22)]
        public virtual void EstimatedKiwiSaverBalance_55()
        {
#line 7
this.EstimatedKiwiSaverBalance("55", "Not employed", "", "", "$140000", "$10", "Annually", "Balanced", "$200,000", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
